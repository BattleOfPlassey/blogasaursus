{"version":3,"mappings":"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,QACR,EACA,CACEP,KAAM,WACN2I,MAAO,WACPM,YAAa,sCACb1I,KAAM,QACR,EACA,CACEoI,MAAO,gBACP3I,KAAM,WACNO,KAAM,YACN2I,YAAa,CAAC,KAAK,CACrB,EACA,CACElJ,KAAM,gBACN2I,MAAO,cACPpI,KAAM,SACP,CAEJ,EAAE4I,GAAI,CACL,MACA,MACA,MACA,MACA,KACA,MACA,IAAI,EACHC,GAAI,CACL,IACA,KACA,KAAK,EACJC,GAAI,CACL,SACA,QACA,QACA,SACA,QACA,UACA,QACA,OACA,QACA,OACA,SACA,KACA,KACA,SACA,SACA,QACA,UACA,SACA,UACA,UACA,SACA,MACA,KACA,aACA,cACA,UACA,OACA,SACA,SACA,YACA,YACA,YACA,MACA,OACA,KACA,SACA,OACA,OACA,QACA,OACA,KACA,MACA,KACA,OACA,WACA,OACA,OACA,MACA,OACA,YACA,QACA,OACA,QACA,OACA,UACA,KACA,SACA,UACA,QACA,aACA,SACA,QACA,KACA,OACA,SACA,MACA,OACA,SACA,SAAS,EAEX,IAAIC,GAAoB,IAAIC,IAAI,CAC9B,GAAGJ,GACH,GAAGC,GACH,GAAGC,EAAC,CACL,EACD,MAAMG,GAAI,CACR,OACA,YACA,SACA,cACA,MACA,MACA,OACA,QACA,MACA,MACA,MACA,SACA,WACA,aACA,cACA,KACA,KACA,MACA,eACA,eACA,YACA,SACA,SACA,MACA,OACA,KACA,aACA,aACA,OACA,YACA,UACA,UACA,UACA,SACA,OACA,aACA,MACA,UACA,KACA,KACA,KACA,MACA,SACA,OACA,UACA,MACA,SACA,QACA,MACA,gBACA,gBACA,MACA,MACA,IACA,KACA,UACA,WACA,MACA,MAAM,EAER,IAAIC,GAAID,GACR,MAAME,GAAIJ,GAAGK,GAAIF,GAAG1E,EAAK,4BAA4B6E,GAAI,IAAIC,OAAQ,yCAAwC9E,QAAQA,OAAOA,eAAeA,MAAO,GAAG,EAAG+E,GAAK9H,GAAMA,EAAE+H,IAAKC,GAAM,CAAC,IAAIH,OAAQ,MAAKG,OA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","names":["relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","formify","blueprints","optimizedQuery","G.visit","optimizedDocumentNode","typeInfo","G.TypeInfo","schema","addMetaFields","metaFields","getPath","path","currentLevel","fieldPath","item","addBlueprints","_key","_parent","ancestors","nextInfo","innerNode","fields","G.visitWithTypeInfo","subInfo","_a","_b","result","items","key","groupedFields","groups","name","subFields","field","fieldAlias","fieldName","formifyVisitor","parent","type","G.getNamedType","G.isInterfaceType","namedType","G.isUnionType","intfc","G.isObjectType","blueprintVisitor","formifiedQuery","G.parse","documentMachine","createMachine","sendParent","context","_context","event","assign","tina","collection","template","resolvedForm","resolveForm","onSubmit","payload","mutationString","e","formConfig","formifyCallback","buildForm","args","generateFormCreators","cms","showInSidebar","Form","options","SKIPPED","skipped","skip","form","createForm","initialContext","queryMachine","QueryError","doc","spawn","existingData","tinaSchema","gqlSchema","missingForms","newData","G.graphql","G.print","source","info","aliases","fieldNode","value","alias","aliasValue","existingValue","skipFormRegister","documentContext","values","data","extraValues","formVal","resolveFormValue","collectionName","NAMER","missingForm","META_KEY","traverse","o","innerTraversal","i","itemPath","nodePaths","nearestParent","nodePath","a","b","parents","id","getIn","documentNode","documents","callback","_onReceive","_c","GlobalFormPlugin","message","isNodeType","accum","v","resolveFieldValue","templateFields","Preview","props","activeQuery","setActiveQuery","React","useState","useEffect","iframeRef","current","addEventListener","contentWindow","postMessage","_jsx","QueryMachine","url","useCMS","machine","useMemo","withContext","state","send","useMachine","unsubscribeFieldChange","events","subscribe","Object","keys","documentMap","includes","formId","unsubscribeReset","matches","dispatch","JSON","stringify","N","label","list","ui","itemProps","title","F","description","collections","B","j","R","q","Set","M","_","A","H","U","RegExp","$","map","l","O","test","slice","x","toLowerCase","replace","r","m","h","T","w","I","D","length","L","S","has","toUpperCase","t","special","n","forEach","W","toString","trim","k","Intl","DateTimeFormat","year","format","month","day","G","split","join","J","defaultItem","isTitle","required","X","z","Q","templates","component","input","tinaForm","onChange","V","y","K","process","NEXT_PUBLIC_TINA_BRANCH","NEXT_PUBLIC_VERCEL_GIT_COMMIT_REF","HEAD","Z","_jsxs","f","Y","date","Date","dateFormat","parse","isBody","ee","s","document","c","p","substring","lastIndexOf","reduce","g","u","te","le","ae","global","allowedActions","create","delete","createElement","d","P","C","ne","position","ie","re","ce","E","branch","clientId","CLIENT_ID","token","TOKEN","build","outputFolder","publicFolder","media","mediaRoot","RawEditor","lazy","__vitePreload","Editor","rawMode","setRawMode","MdxFieldPluginExtendible","Suspense","SetPreview","flags","set","add","Component","TinaAdminWrapper","config","TinaCMS","apiUrl","__API_URL__","TinaAdmin","GoToEdit","setEdit","useEditState","App","TinaEditProvider","ReactDOM","render","getElementById"],"sources":["../../../vite/modulepreload-polyfill","../../../.tina/__generated__/app/src/lib/formify/index.ts","../../../.tina/__generated__/app/src/lib/machines/document-machine.ts","../../../.tina/__generated__/app/src/lib/machines/query-machine.ts","../../../.tina/__generated__/app/src/preview.tsx","../../../.tina/__generated__/prebuild/config.js","../../../.tina/__generated__/app/src/App.tsx","../../../.tina/__generated__/app/src/main.tsx"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","/**\n\n*/\n\nimport * as G from 'graphql'\n\ntype VisitorType = G.Visitor<G.ASTKindToNode, G.ASTNode>\ntype Info = { name: string; alias: string; fields?: Info[]; path?: string[] }\nexport type Blueprint2 = Info\n\nexport const formify = async ({\n  schema,\n  optimizedDocumentNode,\n}: {\n  schema: G.GraphQLSchema\n  optimizedDocumentNode: G.DocumentNode\n}): Promise<{\n  formifiedQuery: G.DocumentNode\n  blueprints: Blueprint2[]\n}> => {\n  const blueprints: Blueprint2[] = []\n  const visitor: VisitorType = {\n    OperationDefinition: (node) => {\n      if (!node.name) {\n        return {\n          ...node,\n          name: {\n            kind: 'Name',\n            // FIXME: add some sort of uuid to this\n            value: `QueryOperation`,\n          },\n        }\n      }\n      return node\n    },\n  }\n  const documentNodeWithName = G.visit(optimizedDocumentNode, visitor)\n  const optimizedQuery = documentNodeWithName as G.DocumentNode\n  const typeInfo = new G.TypeInfo(schema)\n\n  const addMetaFields: G.VisitFn<G.ASTNode, G.FieldNode> = (\n    node: G.FieldNode\n  ): G.ASTNode => {\n    return {\n      ...node,\n      selectionSet: {\n        ...(node.selectionSet || {\n          kind: 'SelectionSet',\n          selections: [],\n        }),\n        selections:\n          [...(node.selectionSet?.selections || []), ...metaFields] || [],\n      },\n    }\n  }\n\n  const getPath = (\n    path: readonly (string | number)[],\n    node: G.ASTNode | readonly G.ASTNode[]\n  ) => {\n    let currentLevel = node\n    const fieldPath: string[] = []\n    path.forEach((item) => {\n      // @ts-ignore not sure the best way to ensure this is indexable\n      currentLevel = currentLevel[item]\n      if (!Array.isArray(currentLevel)) {\n        // @ts-ignore FIXME this array check doesn't seem to be doing anything for the types\n        if (currentLevel.kind === 'Field') {\n          fieldPath.push(currentLevel.name.value)\n        }\n      }\n    })\n    return fieldPath\n  }\n\n  const addBlueprints: G.VisitFn<G.ASTNode, G.FieldNode> = (\n    node: G.FieldNode,\n    _key,\n    _parent,\n    path,\n    ancestors\n  ): void => {\n    const fieldPath = getPath(path, ancestors[0])\n    const nextInfo = (innerNode: G.FieldNode) => {\n      const fields: Info['fields'] = []\n      G.visit(\n        innerNode,\n        G.visitWithTypeInfo(typeInfo, {\n          Field: {\n            enter: (node) => {\n              typeInfo.enter(node)\n              if (node.name.value !== innerNode.name.value) {\n                if (node.selectionSet?.selections.length) {\n                  const subInfo = nextInfo(node)\n                  fields.push({\n                    name: node.name.value,\n                    alias: node.alias?.value || node.name.value,\n                    fields: subInfo.fields,\n                  })\n                  // Stop visiting this subtree, it'll be visited from the next nextInfo() call\n                  return false\n                } else {\n                  fields.push({\n                    name: node.name.value,\n                    alias: node.alias?.value || node.name.value,\n                  })\n                }\n              }\n            },\n            leave: (node) => {\n              typeInfo.leave(node)\n            },\n          },\n        })\n      )\n      if (fields?.length) {\n        return {\n          name: innerNode.name.value,\n          alias: innerNode.alias?.value || innerNode.name.value,\n          fields,\n        }\n      } else {\n        return {\n          name: innerNode.name.value,\n          alias: innerNode.alias?.value || innerNode.name.value,\n        }\n      }\n    }\n    const result = nextInfo(node)\n    const mergeFields = (fields: Info['fields']): Info['fields'] => {\n      if (!fields) {\n        return []\n      }\n      const groupBy = <T extends { [key: string]: any }>(\n        items: T[],\n        key: string\n      ) =>\n        items.reduce(\n          (result: { [key: string]: T[] }, item: T) => ({\n            ...result,\n            [item[key]]: [...(result[item[key]] || []), item],\n          }),\n          {}\n        )\n\n      const groups = groupBy(fields, 'alias') as { [name: string]: Info[] }\n      const groupedFields: Info[] = []\n      Object.entries(groups).forEach(([name, items]) => {\n        const subFields: Info[] = []\n        items.forEach((item) => {\n          item.fields?.forEach((field) => subFields.push(field))\n        })\n        const fieldName = items[0].name\n        const fieldAlias = items[0].alias\n        if (subFields?.length) {\n          groupedFields.push({\n            name: fieldName,\n            alias: fieldAlias,\n            fields: subFields,\n          })\n        } else {\n          groupedFields.push({ name: fieldName, alias: fieldAlias })\n        }\n      })\n      return groupedFields\n    }\n    const fields = mergeFields(result.fields)\n    if (\n      // blueprints.find(({ path }) =>\n      //   fieldPath.join('.').startsWith(path.join('.'))\n      // )\n      false\n    ) {\n      // skip because this is a nested blueperint\n    } else {\n      if (fields?.length) {\n        blueprints.push({\n          name: result.name,\n          alias: result.alias,\n          fields,\n          path: fieldPath,\n        })\n      } else {\n        blueprints.push({\n          name: result.name,\n          alias: result.alias,\n          path: fieldPath,\n        })\n      }\n    }\n  }\n\n  const formifyVisitor: VisitorType = {\n    InlineFragment: {\n      enter: (node) => {\n        typeInfo.enter(node)\n      },\n      leave: (node) => {\n        typeInfo.leave(node)\n      },\n    },\n    Field: {\n      enter: (node, key, parent, path, ancestors) => {\n        typeInfo.enter(node)\n        const type = typeInfo.getType()\n        if (type) {\n          const namedType = G.getNamedType(type)\n          if (G.isInterfaceType(namedType)) {\n            if (namedType.name === 'Node') {\n              return addMetaFields(node, key, parent, path, ancestors)\n            }\n          }\n          if (G.isUnionType(namedType)) {\n            const types = namedType.getTypes()\n            if (\n              types.every((type) => {\n                return type\n                  .getInterfaces()\n                  .some((intfc) => intfc.name === 'Node')\n              })\n            ) {\n              return addMetaFields(node, key, parent, path, ancestors)\n            }\n          }\n          if (G.isObjectType(namedType)) {\n            if (\n              namedType.getInterfaces().some((intfc) => intfc.name === 'Node')\n            ) {\n              return addMetaFields(node, key, parent, path, ancestors)\n            }\n          }\n        }\n      },\n    },\n  }\n  const blueprintVisitor: VisitorType = {\n    InlineFragment: {\n      enter: (node) => {\n        typeInfo.enter(node)\n      },\n      leave: (node) => {\n        typeInfo.leave(node)\n      },\n    },\n    Field: {\n      enter: (node, key, parent, path, ancestors) => {\n        typeInfo.enter(node)\n        const type = typeInfo.getType()\n        if (type) {\n          const namedType = G.getNamedType(type)\n          if (G.isInterfaceType(namedType)) {\n            if (namedType.name === 'Node') {\n              addBlueprints(node, key, parent, path, ancestors)\n              return false\n            }\n          }\n          if (G.isUnionType(namedType)) {\n            const types = namedType.getTypes()\n            if (\n              types.every((type) => {\n                return type\n                  .getInterfaces()\n                  .some((intfc) => intfc.name === 'Node')\n              })\n            ) {\n              addBlueprints(node, key, parent, path, ancestors)\n              return false\n            }\n          }\n          if (G.isObjectType(namedType)) {\n            if (\n              namedType.getInterfaces().some((intfc) => intfc.name === 'Node')\n            ) {\n              addBlueprints(node, key, parent, path, ancestors)\n              return false\n            }\n          }\n        }\n      },\n    },\n  }\n  const formifiedQuery = G.visit(\n    optimizedQuery,\n    G.visitWithTypeInfo(typeInfo, formifyVisitor)\n  )\n  G.visit(formifiedQuery, G.visitWithTypeInfo(typeInfo, blueprintVisitor))\n\n  return { formifiedQuery, blueprints }\n}\n\n/**\n * This is a dummy query which we pull apart and spread\n * back into the the selectionSet for all \"Node\" fields\n */\nconst node = G.parse(`\n query Sample {\n  ...on Document {\n    _internalValues: _values\n    _internalSys: _sys {\n      breadcrumbs\n      basename\n      filename\n      path\n      extension\n      relativePath\n      title\n      template\n      collection {\n        name\n        slug\n        label\n        path\n        format\n        matches\n        templates\n        fields\n        __typename\n      }\n      __typename\n    }\n  }\n }`)\nconst metaFields: G.SelectionNode[] =\n  // @ts-ignore\n  node.definitions[0].selectionSet.selections\n","/**\n\n*/\nimport { Client, Field, Form, FormOptions, TinaCMS } from 'tinacms'\nimport { assign, createMachine, sendParent } from 'xstate'\nimport {\n  resolveForm,\n  Templateable,\n  TinaFieldEnriched,\n  TinaSchema,\n} from 'tinacms'\n\nexport type FieldType = Field & TinaFieldEnriched\nexport type FormValues = Record<string, unknown>\nexport type FormType = Form<FormValues, FieldType>\n\nexport type DataType = Record<string, unknown>\n\nexport type Data = {\n  _internalValues: object\n  _internalSys: {\n    breadcrumbs: string[]\n    basename: string\n    filename: string\n    path: string\n    extension: string\n    relativePath: string\n    title?: string\n    template: string\n    collection: {\n      name: string\n      slug: string\n      label: string\n      path: string\n      format: string\n      matches?: string\n      templates?: object\n      fields?: object\n      __typename: string\n    }\n  }\n}\n\ntype ContextType = {\n  id: string\n  data: null | Data\n  form: null | FormType\n  cms: TinaCMS\n  formifyCallback: (args: any, cms: TinaCMS) => Form\n}\n\nexport const documentMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QAoC2BDAxgCwJYDswBKAOgNwBdd0AbXALwKgGIIB7Qs-ANzYGswJNFjyFS5KrQZMEBXpnRUOAbQAMAXUSgADm1iVcHLSAAeiAEwAWSyUsA2VQE4AzAHYArABoQAT0QAORxJHEMdLd1d7d3NXWIBfOO9hHAJiLgMpRnwWMAAnXLZckm0aRQAzQtQhDBSxdMk6LKhZHjYFJXw1TSQQXX0O4zMEKxt7JzcvXwtVd2DQu2d-ZwBGVWX-dwTEkHw2CDhjZNE0iWpGpmM+gyMeoctzbz8EVaDLUNdAtfvIze2j1NIuTA6AgTx0emu+EGiEszlUtlcdncdnMkyey3WtlC-mWjmW7ncTlRCSSNWOpDyBVylwhA1uMLhCKRKLRFlxcxC4UiSJikRJIH+Yhp-UMUPpz38j0Q6y2cSAA */\n  createMachine(\n    {\n      tsTypes: {} as import('./document-machine.typegen').Typegen0,\n      schema: {\n        context: {} as ContextType,\n        services: {} as {\n          initializer: {\n            data: {\n              form: FormType | undefined\n              data: Data\n            }\n          }\n          scanner: {\n            data: {\n              data: object\n            }\n          }\n        },\n        events: {} as\n          | {\n              type: 'ADD_LOCATION'\n              value: string\n            }\n          | {\n              type: 'INIT'\n            }\n          | {\n              type: 'SCAN'\n            }\n          | {\n              type: 'RESCAN'\n            },\n      },\n      id: '(machine)',\n      initial: 'initializing',\n      states: {\n        initializing: {\n          invoke: {\n            src: 'initializer',\n            onDone: [\n              {\n                actions: ['storeFormAndData', 'notifyParent'],\n                target: 'ready',\n              },\n            ],\n            onError: [\n              {\n                actions: 'handleError',\n                target: 'error',\n              },\n            ],\n          },\n        },\n        ready: {},\n        error: {},\n      },\n    },\n    {\n      actions: {\n        notifyParent: sendParent((context) => {\n          return {\n            type: 'DOCUMENT_READY',\n            value: context.id,\n          }\n        }),\n        handleError: (_context, event) => {\n          console.error(event.data)\n        },\n        storeFormAndData: assign((context, event) => {\n          // context.cms.forms.add(event.data.form)\n          return { ...context, form: event.data.form, data: event.data.data }\n        }),\n      },\n      services: {\n        initializer: async (context) => {\n          const tina = context.cms.api.tina as Client\n          let node: Data\n          if (context.data) {\n            node = context.data\n          } else {\n            const response = await tina.request<{\n              node: Data\n            }>(\n              `query GetNode($id: String!) {\n        node(id: $id) {\n          ...on Document {\n            _internalValues: _values\n            _internalSys: _sys {\n              breadcrumbs\n              basename\n              filename\n              path\n              extension\n              relativePath\n              title\n              template\n              collection {\n                name\n                slug\n                label\n                path\n                format\n                matches\n                templates\n                fields\n                __typename\n              }\n              __typename\n            }\n          }\n        }\n      }`,\n              { variables: { id: context.id } }\n            )\n            node = response.node\n          }\n          const schema = context.cms.api.tina.schema as TinaSchema\n          if (!schema) {\n            throw new Error(`Schema must be provided`)\n          }\n          const collection = schema.getCollection(\n            node._internalSys.collection.name\n          )\n          let template: Templateable\n          if (collection.templates) {\n            template = collection.templates.find((template) => {\n              if (typeof template === 'string') {\n                throw new Error(`Global templates not supported`)\n              }\n              return template.name === node._internalSys.template\n            }) as Templateable\n          } else {\n            template = collection\n          }\n          if (!template) {\n            throw new Error(\n              `Unable to find template for node ${node._internalSys.path}`\n            )\n          }\n          const resolvedForm = resolveForm({\n            collection,\n            basename: node._internalSys.filename,\n            schema,\n            template,\n          })\n          const onSubmit = async (payload: Record<string, unknown>) => {\n            try {\n              const mutationString = `#graphql\n              mutation UpdateDocument($collection: String!, $relativePath: String!, $params: DocumentUpdateMutation!) {\n                updateDocument(collection: $collection, relativePath: $relativePath, params: $params) {\n                  __typename\n                }\n              }\n            `\n\n              await context.cms.api.tina.request(mutationString, {\n                variables: {\n                  collection: node._internalSys.collection.name,\n                  relativePath: node._internalSys.relativePath,\n                  params: schema.transformPayload(\n                    node._internalSys.collection.name,\n                    payload\n                  ),\n                },\n              })\n              context.cms.alerts.success('Document saved!')\n            } catch (e) {\n              context.cms.alerts.error(\n                'There was a problem saving your document'\n              )\n              console.error(e)\n            }\n          }\n          const formConfig = {\n            id: context.id,\n            label:\n              node._internalSys.title || node._internalSys.collection.label,\n            initialValues: node._internalValues,\n            fields: resolvedForm.fields,\n            onSubmit,\n          }\n          const formifyCallback = context.formifyCallback\n          const form = buildForm(\n            formConfig,\n            context.cms,\n            (args) => {\n              if (formifyCallback) {\n                return formifyCallback(args, context.cms)\n              } else {\n                return args.createForm(args.formConfig)\n              }\n            },\n            true,\n            onSubmit\n          )\n          return { form, data: node }\n        },\n      },\n    }\n  )\n\ntype FormCreator = (formConfig: FormOptions<any>) => Form\ninterface GlobalFormOptions {\n  icon?: any\n  layout: 'fullscreen' | 'popup'\n}\ntype GlobalFormCreator = (\n  formConfig: FormOptions<any>,\n  options?: GlobalFormOptions\n) => Form\ninterface GlobalFormOptions {\n  icon?: any\n  layout: 'fullscreen' | 'popup'\n}\nexport interface FormifyArgs {\n  formConfig: FormOptions<any>\n  createForm: FormCreator\n  createGlobalForm: FormCreator\n  skip?: () => void\n}\n\nexport type formifyCallback = (args: FormifyArgs, cms: TinaCMS) => Form | void\nexport type onSubmitArgs = {\n  /**\n   * @deprecated queryString is actually a mutation string, use `mutationString` instead\n   */\n  queryString: string\n  mutationString: string\n  variables: object\n}\n\nexport const generateFormCreators = (cms: TinaCMS, showInSidebar?: boolean) => {\n  const createForm = (formConfig: FormOptions<any, any>) => {\n    return new Form(formConfig)\n  }\n  const createGlobalForm: GlobalFormCreator = (\n    formConfig,\n    options?: { icon?: any; layout: 'fullscreen' | 'popup' }\n  ) => {\n    const form = new Form({\n      ...formConfig,\n      global: { global: true, ...options },\n    })\n    return form\n  }\n  return { createForm, createGlobalForm }\n}\n\nexport const buildForm = (\n  formConfig: any,\n  cms: TinaCMS,\n  formify: formifyCallback,\n  showInSidebar: boolean = false,\n  onSubmit?: (args: any) => void\n): FormType | undefined => {\n  const { createForm, createGlobalForm } = generateFormCreators(\n    cms,\n    showInSidebar\n  )\n  const SKIPPED = 'SKIPPED'\n  let form\n  let skipped\n  const skip = () => {\n    skipped = SKIPPED\n  }\n  if (skipped) return\n\n  if (formify) {\n    form = formify(\n      {\n        formConfig,\n        createForm,\n        createGlobalForm,\n        skip,\n      },\n      cms\n    )\n  } else {\n    form = createForm(formConfig)\n  }\n\n  if (!(form instanceof Form)) {\n    if (skipped === SKIPPED) {\n      return\n    }\n    throw new Error('formify must return a form or skip()')\n  }\n\n  return form\n}\n","/**\n\n*/\nimport { assign, createMachine, spawn } from 'xstate'\nimport {\n  Form,\n  TinaCMS,\n  NAMER,\n  TinaFieldEnriched,\n  TinaCollection,\n  TinaSchema,\n  GlobalFormPlugin,\n  Client,\n} from 'tinacms'\nimport * as G from 'graphql'\nimport { formify } from '../formify'\nimport { Data, documentMachine } from './document-machine'\nimport type { ActorRefFrom } from 'xstate'\nimport { getIn } from 'final-form'\n\nexport type DataType = Record<string, unknown>\ntype DocumentInfo = {\n  ref: ActorRefFrom<typeof documentMachine>\n}\ntype DocumentMap = {\n  [documentId: string]: DocumentInfo & {\n    /** We don't support nested forms or forms for list queries */\n    skipFormRegister: boolean\n  }\n}\n\ntype ContextType = {\n  id: null | string\n  data: null | DataType\n  cms: TinaCMS\n  documentNode: G.DocumentNode\n  variables: object\n  iframe: null | HTMLIFrameElement\n  registerSubForms?: boolean\n  formifyCallback: (args: any) => Form\n  documentMap: DocumentMap\n  documents: Data[]\n}\nexport const initialContext: Omit<ContextType, 'cms' | 'formifyCallback'> = {\n  id: null,\n  data: null,\n  variables: {},\n  documentMap: {},\n  documents: [],\n  documentNode: { kind: 'Document', definitions: [] },\n  iframe: null,\n}\nexport const queryMachine =\n  /** @xstate-layout N4IgpgJg5mDOIC5QAoC2BDAxgCwJYDswBKAOgFcAnAGxNwirAGIBlAUQBUB9AVQCUAZRKAAOAe1i4ALrlH4hIAB6IAjAAYALCXXqAnACZVAVmUAOAGxmAzMp1mANCACeidXpMkdnnSZvLDh1X11AF9ghzQsPEJSSho6BhYOTgBJADkABW4uPkEkEDEJaVl5JQQAdh0SMtVqvTqassN1M0MHZwRLdWUPLx8dPwCg0PCMHAJicmpaeiY2LgARZOZ0-gBBAE0eAXkCqRk5PNKyvRJVM-OL8+U2xD0mns8+gcC9ELCQCLHoybiZxm50vNVuxWFtciJxHtiodECZKqoLOpVMpjiYTGUyp0bghlGYyg9vL5-C83iNIuNSMJcMIwFRxtMEqt5vNOABFbisXjrHaQooHUBHPSWEiGSw6VSWUWYvRWHTYsro07nSzIpE+CrDD6jKITKk0umEBmzbgAIXmAHkAMLcACyrFS7GYPMK+xKiGOwtF4sllmlsuxOlcIquJlUJm04pMms+Osp1Np9PiTGSADFeKs7ZwbebuA7WPNnVD+YpEKKzCKFWG0dZkSZWk5YRKlWdDMc8f5SVryd89QnDQQ9ug6QAvAhQRgQWRgWj4ABuogA1tOYxSSL2DdOB9Ih7hR-goAgCPPMOg+QBtVQAXULfLdOLU+Neej8yksNdM9faCs0l3FrleorRtqq7rom+CDiOY6MGAFAUKIFBrlQp4AGbwagJArj28YbjOEG7mOh5zqIJ7nleN6ujC941CQT4vm+agftiZg6Piv4aHU6iAe8mG6th9IAO7oHs+6MBa1p2g6nC8KwTLcnkuy3pRygPjRrh0e+dbYspujNmcf4cU0QHdrx+r0jS+AQFBk79kRS4YcBWGmYa5mWfuhHHqe+wXte8m8hRAoqKYmiSn4Mr0bWn4qJYipeJ4gSto0zRGV8Jl9tOLlQTBcEIcISGSKhFDoTxcZOelYAWQRR7EZ5sjeeR0IBVRj5qcY4WMQ2OIIicbH-pxnbFWufGGhQYDoBAjj-ICwKgjk9XFqUlh4iQnS+kiOgJU09gdfo5YXCqyhqiiOjJbGg2lSQI1jRN0nZgAaqC7KcnJEIug1JYdEtK1lGtG3NNi6LuBc6gmHUophmUJ0gUN06XeNiT8KwloLFatr2uwc13sphgijYooJcpdRmCYWnKeWsXiutGKbZDjlpRdo1wymySsPwLKWgAEqsqQAOKsBjlGLfiX0-VTf0dcoMruIYoTvPgogQHA8gDbERr841ynuDK63WHclyWNihgGASTzEvoNMTLEavvcDumXBcB0Btj5PxaLZh6ObJV00mVulE02Nu7oROSs+XR6P9626a2MqNIZ3EOalOFbrgO57lAPuIH+VQ+M+0UaZF5SGLt5xR+2sdkilns4YJwlp75r3zRn3inDovoaAq6LSiTb4kCYb4qvoBh4sdcfGZXZnla5tcvUWmO+t0am99WDGaeL1juAqraGCDRg2O7I8V2ddOw+00+KY1GJaQY7jO5TiVmB7h84Vl8Hpzic9aM+i+98v+dlGoBIU1+vffep1QKEFfqKJidxdKmDDBGBEHtX6vFtnbM4DsOpCgAeTXowDQhAA */\n  createMachine(\n    {\n      tsTypes: {} as import('./query-machine.typegen').Typegen0,\n      schema: {\n        context: {} as ContextType,\n        services: {} as {\n          initializer: {\n            data: {\n              data: DataType\n            }\n          }\n          setter: {\n            data: { data: DataType }\n          }\n          subDocumentResolver: {\n            data: {\n              id: string\n              location: string\n            }[]\n          }\n          onChangeCallback: {\n            data: undefined\n          }\n        },\n        events: {} as\n          | {\n              type: 'IFRAME_MOUNTED'\n              value: HTMLIFrameElement\n            }\n          | {\n              type: 'SELECT_DOCUMENT'\n              value: string\n            }\n          | {\n              type: 'DOCUMENT_READY'\n              value: string\n            }\n          | {\n              type: 'NAVIGATE'\n            }\n          | {\n              type: 'ADD_QUERY'\n              value: {\n                id: string\n                type: 'open' | 'close'\n                query: string\n                data: object\n                variables: object\n              }\n            }\n          | {\n              type: 'REMOVE_QUERY'\n              value: string\n            }\n          | {\n              type: 'SUBDOCUMENTS'\n              value: { id: string; location: string }[]\n            }\n          | {\n              type: 'FIELD_CHANGE'\n            }\n          | {\n              type: 'EDIT_MODE'\n            },\n      },\n      id: '(machine)',\n      type: 'parallel',\n      states: {\n        pipeline: {\n          initial: 'idle',\n          states: {\n            idle: {\n              entry: 'clear',\n              on: {\n                ADD_QUERY: {\n                  target: 'initializing',\n                },\n                SUBDOCUMENTS: {\n                  target: 'pending',\n                },\n                IFRAME_MOUNTED: {\n                  actions: 'setIframe',\n                },\n              },\n            },\n            initializing: {\n              invoke: {\n                src: 'initializer',\n                onDone: [\n                  {\n                    actions: 'storeInitialValues',\n                    target: 'pending',\n                  },\n                ],\n                onError: [\n                  {\n                    actions: 'handleError',\n                    target: 'error',\n                  },\n                ],\n              },\n            },\n            waiting: {\n              on: {\n                DOCUMENT_READY: {\n                  target: 'pending',\n                },\n              },\n            },\n            pending: {\n              invoke: {\n                src: 'setter',\n                onDone: [\n                  {\n                    target: 'ready',\n                  },\n                ],\n                onError: [\n                  {\n                    actions: 'handleMissingDocument',\n                    target: 'waiting',\n                  },\n                ],\n              },\n            },\n            ready: {\n              entry: 'resolveData',\n              invoke: {\n                src: 'onChangeCallback',\n              },\n              on: {\n                NAVIGATE: {\n                  target: 'idle',\n                },\n                REMOVE_QUERY: {\n                  target: 'idle',\n                },\n                FIELD_CHANGE: {\n                  target: 'pending',\n                },\n              },\n            },\n            error: {},\n          },\n        },\n      },\n    },\n    {\n      actions: {\n        handleError: (_context, event) => console.error(event.data),\n        handleMissingDocument: assign((context, event) => {\n          if (event.data instanceof QueryError) {\n            if (context.documentMap[event.data.id]) {\n              // Already exists\n              return context\n            }\n            if (!event.data.id) {\n              return context\n            }\n            const existingData = context.documents.find(\n              (doc) => doc._internalSys.path === event.data.id\n            )\n            const doc = {\n              ref: spawn(\n                documentMachine.withContext({\n                  id: event.data.id,\n                  cms: context.cms,\n                  formifyCallback: context.formifyCallback,\n                  form: null,\n                  data: existingData || null,\n                })\n              ),\n            }\n\n            return {\n              ...context,\n              documentMap: {\n                ...context.documentMap,\n                [event.data.id]: {\n                  ...doc,\n                  skipFormRegister: event.data.skipFormRegister,\n                },\n              },\n            }\n          } else {\n            console.error(event.data)\n            return context\n          }\n        }),\n        clear: assign((context) => {\n          context.cms.forms.all().forEach((form) => {\n            context.cms.forms.remove(form.id)\n          })\n          return {\n            ...initialContext,\n            formifyCallback: context.formifyCallback,\n            cms: context.cms,\n            // documentMap: context.documentMap, // to preserve docs across pages\n            iframe: context.iframe,\n          }\n        }),\n        storeInitialValues: assign((context, event) => {\n          return {\n            ...context,\n            ...event.data,\n          }\n        }),\n        setIframe: assign((context, event) => {\n          return {\n            ...context,\n            iframe: event.value,\n          }\n        }),\n        resolveData: assign((context, event) => {\n          if (context.iframe) {\n            context.iframe?.contentWindow?.postMessage({\n              type: 'updateData',\n              id: context.id,\n              data: event.data.data,\n            })\n          }\n          return {\n            ...context,\n            data: event.data.data,\n          }\n        }),\n      },\n      services: {\n        setter: async (context) => {\n          const tinaSchema = context.cms.api.tina.schema as TinaSchema\n          const gqlSchema = context.cms.api.tina.gqlSchema\n          const missingForms: { id: string; skipFormRegister: boolean }[] = []\n          const newData = await G.graphql({\n            schema: gqlSchema,\n            source: G.print(context.documentNode),\n            rootValue: context.data,\n            variableValues: context.variables,\n            fieldResolver: (source, args, _context, info) => {\n              const fieldName = info.fieldName\n\n              /**\n               * Since the `source` for this resolver is the query that\n               * ran before passing it into `useTina`, we need to take aliases\n               * into consideration, so if an alias is provided we try to\n               * see if that has the value we're looking for. This isn't a perfect\n               * solution as the `value` gets overwritten depending on the alias\n               * query.\n               */\n              const aliases: string[] = []\n              info.fieldNodes.forEach((fieldNode) => {\n                if (fieldNode.alias) {\n                  aliases.push(fieldNode.alias.value)\n                }\n              })\n              let value = source[fieldName]\n              if (!value) {\n                aliases.forEach((alias) => {\n                  const aliasValue = source[alias]\n                  if (aliasValue) {\n                    value = aliasValue\n                  }\n                })\n              }\n              /**\n               * Formify adds `_internalSys` and `_internalValues` to the query\n               * and a user's query might also include `_values` or `_sys`, but\n               * it may not contain all of the info we need, so the actual\n               * source of truth for these values is our alias ones, which are\n               * also guaranteed to include all of the values another `_sys` query\n               * might include\n               */\n              if (fieldName === '_sys') {\n                return source._internalSys\n              }\n              if (fieldName === '_values') {\n                return source._internalValues\n              }\n              if (isNodeType(info.returnType)) {\n                const existingValue = source[fieldName]\n                let skipFormRegister = false\n                if (!existingValue) {\n                  return null\n                }\n                let path: string = ''\n                if (typeof existingValue === 'string') {\n                  // this is a reference value (eg. post.author)\n                  skipFormRegister = true\n                  path = existingValue\n                } else {\n                  path = existingValue._internalSys.path\n                }\n                if (context.documentMap[path]) {\n                  const documentMachine = context.documentMap[path].ref\n                  const documentContext = documentMachine.getSnapshot()?.context\n                  if (!documentContext) {\n                    throw new Error(\n                      `Document not set up properly for id: ${path}`\n                    )\n                  }\n                  const { data, form } = documentContext\n                  const values = form?.values\n                  if (!data || !form || !values) {\n                    throw new Error(\n                      `Document not set up properly for id: ${path}`\n                    )\n                  }\n                  const collectionName = data._internalSys.collection.name\n                  const extraValues = documentContext.data\n                  const formVal = resolveFormValue({\n                    fields: form.fields,\n                    values: values,\n                    tinaSchema,\n                  })\n                  const template = tinaSchema.getTemplateForData({\n                    data: form.values,\n                    collection: tinaSchema.getCollection(collectionName),\n                  })\n                  return {\n                    ...extraValues,\n                    ...formVal,\n                    _sys: data._internalSys,\n                    id: path,\n                    __typename: NAMER.dataTypeName(template.namespace),\n                  }\n                } else {\n                  // TODO: when we support forms in lists, remove this check\n                  // This checks that we're at least 2 levels deep, meaning top-level\n                  // queries list page(relativePath: '...') will be registered, but\n                  // not connection nodes like pageConnection.edges.node\n                  if (info.path?.prev?.prev) {\n                    skipFormRegister = true\n                  }\n                  missingForms.push({ id: path, skipFormRegister })\n                  return null\n                }\n              }\n              return value\n            },\n          })\n          if (missingForms.length > 0) {\n            // Only run this one at a time\n            const missingForm = missingForms[0]\n            throw new QueryError(\n              `Unable to resolve form for initial document`,\n              missingForm.id,\n              missingForm.skipFormRegister\n            )\n          }\n          // Populate __meta__ property for use\n          // in active field indicator utility\n          const META_KEY = '__meta__'\n          function* traverse(o) {\n            const memory = new Set()\n            function* innerTraversal(o, path = []) {\n              if (memory.has(o)) {\n                // we've seen this object before don't iterate it\n                return\n              }\n              // add the new object to our memory.\n              memory.add(o)\n              for (let i of Object.keys(o)) {\n                const itemPath = path.concat(i)\n                yield [i, o[i], itemPath, o]\n                if (o[i] !== null && typeof o[i] == 'object') {\n                  if (\n                    [\n                      '_internalSys',\n                      '_internalValues',\n                      '_sys',\n                      META_KEY,\n                    ].includes(i)\n                  ) {\n                    //going one step down in the object tree!!\n                    yield* innerTraversal(o[i], itemPath)\n                  }\n                }\n              }\n            }\n            yield* innerTraversal(o)\n          }\n          const nodePaths = []\n          for (let [key, value, path, parent] of traverse(newData.data)) {\n            if (value?._internalSys) {\n              nodePaths.push(path)\n              const fields = {}\n              const parents = nodePaths.filter((nodePath) => {\n                return path.join('.').startsWith(nodePath.join('.'))\n              })\n\n              const nearestParent = parents.reduce(function (a, b) {\n                return a.length < b.length ? a : b\n              })\n              Object.keys(value).map((key) => {\n                if (\n                  [\n                    '__typename',\n                    '_internalSys',\n                    '_internalValues',\n                    '_sys',\n                  ].includes(key)\n                ) {\n                  return false\n                }\n                fields[key] = [\n                  ...path.slice(nearestParent.length + 1),\n                  key,\n                ].join('.')\n              })\n              value[META_KEY] = {\n                id: value?._internalSys.path,\n                name: path.slice(nearestParent.length).join('.'),\n                fields,\n              }\n            } else if (\n              typeof value === 'object' &&\n              !Array.isArray(value) &&\n              value !== null\n            ) {\n              if (key !== META_KEY) {\n                const parents = nodePaths.filter((nodePath) => {\n                  return path.join('.').startsWith(nodePath.join('.'))\n                })\n                if (parents.length) {\n                  const nearestParent = parents.reduce(function (a, b) {\n                    return a.length < b.length ? a : b\n                  })\n                  const parent = getIn(newData.data, nearestParent.join('.'))\n                  const id = parent._internalSys.path\n                  const fields = {}\n                  Object.keys(value).map((key) => {\n                    if (\n                      [\n                        '__typename',\n                        '_internalSys',\n                        '_internalValues',\n                        '_sys',\n                      ].includes(key)\n                    ) {\n                      return false\n                    }\n\n                    fields[key] = [\n                      ...path.slice(nearestParent.length),\n                      key,\n                    ].join('.')\n                  })\n                  value[META_KEY] = {\n                    id,\n                    name: path.slice(nearestParent.length).join('.'),\n                    fields,\n                  }\n                }\n              }\n            }\n          }\n          return { data: newData.data }\n        },\n        initializer: async (context, event) => {\n          const tina = context.cms.api.tina as Client\n          const schema = await tina.getSchema()\n          const documentNode = G.parse(event.value.query)\n          const { formifiedQuery } = await formify({\n            schema,\n            optimizedDocumentNode: documentNode,\n          })\n          const data = (await context.cms.api.tina.request(\n            G.print(formifiedQuery),\n            {\n              variables: event.value.variables,\n            }\n          )) as DataType\n          const documents: Data[] = []\n          // step through every value in the payload to find the documents\n          JSON.stringify(data, (key, value) => {\n            if (value?._internalValues) {\n              documents.push(value)\n            }\n            return value\n          })\n          return {\n            data,\n            documents,\n            variables: event.value.variables,\n            documentNode: formifiedQuery,\n            id: event.value.id,\n          }\n        },\n        onChangeCallback: (context) => (callback, _onReceive) => {\n          const schema = context.cms.api.tina.schema as TinaSchema\n          Object.values(context.documentMap).forEach((documentMachine) => {\n            if (!context.registerSubForms) {\n              if (documentMachine.skipFormRegister) {\n                return\n              }\n            }\n            const documentContext = documentMachine.ref.getSnapshot()?.context\n            const collectionName =\n              documentContext?.data?._internalSys.collection.name\n\n            const collection = schema.getCollection(\n              collectionName || ''\n            ) as TinaCollection\n            if (documentContext?.form) {\n              if (collection.ui?.global) {\n                context.cms.plugins.add(\n                  new GlobalFormPlugin(documentContext.form)\n                )\n              } else {\n                context.cms.forms.add(documentContext.form)\n              }\n            }\n          })\n        },\n      },\n    }\n  )\nclass QueryError extends Error {\n  public id: string\n  public skipFormRegister: boolean\n  constructor(message: string, id: string, skipFormRegister: boolean) {\n    super(message) // (1)\n    this.name = 'QueryError' // (2)\n    this.id = id\n    this.skipFormRegister = skipFormRegister\n  }\n}\n\nconst isNodeType = (type: G.GraphQLOutputType) => {\n  const namedType = G.getNamedType(type)\n  if (G.isInterfaceType(namedType)) {\n    if (namedType.name === 'Node') {\n      return true\n    }\n  }\n  if (G.isUnionType(namedType)) {\n    const types = namedType.getTypes()\n    if (\n      types.every((type) => {\n        return type.getInterfaces().some((intfc) => intfc.name === 'Node')\n      })\n    ) {\n      return true\n    }\n  }\n  if (G.isObjectType(namedType)) {\n    if (namedType.getInterfaces().some((intfc) => intfc.name === 'Node')) {\n      return true\n    }\n  }\n}\n\nconst resolveFormValue = <T extends Record<string, unknown>>({\n  fields,\n  values,\n  tinaSchema,\n}: {\n  fields: TinaFieldEnriched[]\n  values: T\n  tinaSchema: TinaSchema\n}): T & { __typename?: string } => {\n  const accum: Record<string, unknown> = {}\n  fields.forEach((field) => {\n    const v = values[field.name]\n    if (typeof v === 'undefined') {\n      return\n    }\n    if (v === null) {\n      return\n    }\n    accum[field.name] = resolveFieldValue({\n      field,\n      value: v,\n      tinaSchema,\n    })\n  })\n  return accum as T & { __typename?: string }\n}\nconst resolveFieldValue = ({\n  field,\n  value,\n  tinaSchema,\n}: {\n  field: TinaFieldEnriched\n  value: unknown\n  tinaSchema: TinaSchema\n}) => {\n  switch (field.type) {\n    case 'object': {\n      if (field.templates) {\n        if (field.list) {\n          if (Array.isArray(value)) {\n            return value.map((item) => {\n              const template = field.templates[item._template]\n              if (typeof template === 'string') {\n                throw new Error('Global templates not supported')\n              }\n              return {\n                __typename: NAMER.dataTypeName(template.namespace),\n                ...resolveFormValue({\n                  fields: template.fields,\n                  values: item,\n                  tinaSchema,\n                }),\n              }\n            })\n          }\n        } else {\n          // not implemented\n        }\n      }\n\n      const templateFields = field.fields\n      if (typeof templateFields === 'string') {\n        throw new Error('Global templates not supported')\n      }\n      if (!templateFields) {\n        throw new Error(`Expected to find sub-fields on field ${field.name}`)\n      }\n      if (field.list) {\n        if (Array.isArray(value)) {\n          return value.map((item) => {\n            return {\n              __typename: NAMER.dataTypeName(field.namespace),\n              ...resolveFormValue({\n                fields: templateFields,\n                values: item,\n                tinaSchema,\n              }),\n            }\n          })\n        }\n      } else {\n        return {\n          __typename: NAMER.dataTypeName(field.namespace),\n          ...resolveFormValue({\n            fields: templateFields,\n            values: value as any,\n            tinaSchema,\n          }),\n        }\n      }\n    }\n    default: {\n      return value\n    }\n  }\n}\n","/**\n\n*/\nimport React from 'react'\nimport { useMachine } from '@xstate/react'\nimport { queryMachine, initialContext } from './lib/machines/query-machine'\nimport { useCMS, defineConfig } from 'tinacms'\nimport type { formifyCallback as FormifyCallback } from 'tinacms/dist/hooks/use-graphql-forms'\n\ntype Config = Parameters<typeof defineConfig>[0]\n\ntype PostMessage = {\n  type: 'open' | 'close' | 'isEditMode'\n  id: string\n  data: object\n}\n\nexport const Preview = (\n  props: Config & {\n    url: string\n    iframeRef: React.MutableRefObject<HTMLIFrameElement>\n  }\n) => {\n  const [activeQuery, setActiveQuery] = React.useState<PostMessage | null>(null)\n\n  React.useEffect(() => {\n    if (props.iframeRef.current) {\n      window.addEventListener('message', (event: MessageEvent<PostMessage>) => {\n        if (event.data.type === 'open') {\n          setActiveQuery(event.data)\n        }\n      })\n      window.addEventListener('message', (event: MessageEvent<PostMessage>) => {\n        if (event?.data?.type === 'isEditMode') {\n          props.iframeRef?.current?.contentWindow?.postMessage({\n            type: 'tina:editMode',\n          })\n        }\n      })\n    }\n  }, [props.iframeRef.current])\n\n  return (\n    <div className=\"tina-tailwind\">\n      {activeQuery && (\n        <QueryMachine\n          key={activeQuery.id}\n          payload={activeQuery}\n          iframeRef={props.iframeRef}\n          formifyCallback={props.formifyCallback}\n        />\n      )}\n      <iframe\n        id=\"tina-iframe\"\n        ref={props.iframeRef}\n        className=\"h-screen w-full bg-white\"\n        src={props.url}\n      />\n    </div>\n  )\n}\n\nconst QueryMachine = (props: {\n  payload: PostMessage\n  iframeRef: React.MutableRefObject<HTMLIFrameElement>\n  formifyCallback: FormifyCallback\n}) => {\n  const cms = useCMS()\n\n  const machine = React.useMemo(\n    () =>\n      queryMachine.withContext({\n        ...initialContext,\n        cms,\n        // Enable registration of sub forms\n        // registerSubForms: true,\n        // @ts-ignore FIXME: add formifyCallback args to Config type\n        formifyCallback: props.formifyCallback,\n      }),\n    []\n  )\n\n  const [state, send] = useMachine(machine)\n  React.useEffect(() => {\n    const unsubscribeFieldChange = cms.events.subscribe(\n      `forms:fields:onChange`,\n      (event) => {\n        // Nested forms from rich-text also trigger this event\n        if (Object.keys(state.context.documentMap).includes(event.formId)) {\n          send({ type: 'FIELD_CHANGE' })\n        }\n      }\n    )\n    const unsubscribeReset = cms.events.subscribe(`forms:reset`, (event) => {\n      if (Object.keys(state.context.documentMap).includes(event.formId)) {\n        send({ type: 'FIELD_CHANGE' })\n      }\n    })\n\n    return () => {\n      unsubscribeFieldChange()\n      unsubscribeReset()\n    }\n  }, [cms, state.context.documentMap])\n\n  React.useEffect(() => {\n    if (state.matches('pipeline.ready')) {\n      cms.events.dispatch({ type: 'forms:register', value: 'complete' })\n    } else if (state.matches('pipeline.initializing')) {\n      cms.events.dispatch({ type: 'forms:register', value: 'start' })\n    }\n  }, [JSON.stringify(state.value)])\n\n  React.useEffect(() => {\n    if (props.iframeRef.current) {\n      send({ type: 'IFRAME_MOUNTED', value: props.iframeRef.current })\n      if (props.payload.type === 'open') {\n        send({ type: 'ADD_QUERY', value: props.payload })\n      }\n      window.addEventListener('message', (event: MessageEvent<PostMessage>) => {\n        // useTinaHook cleans itself up when the component unmounts by sending a close message\n        if (event.data.type === 'close') {\n          send({ type: 'REMOVE_QUERY' })\n        }\n      })\n    }\n  }, [props.iframeRef.current])\n\n  return null\n}\n","import a from \"react\";\nimport { defineConfig as E, ReferenceField as g, TextField as P } from \"tinacms\";\nconst N = {\n  name: \"features\",\n  label: \"Features\",\n  fields: [\n    {\n      name: \"items\",\n      label: \"Features\",\n      type: \"object\",\n      list: !0,\n      ui: {\n        itemProps: (e) => ({\n          label: e.title\n        })\n      },\n      fields: [\n        {\n          name: \"title\",\n          label: \"Title\",\n          type: \"string\"\n        },\n        {\n          name: \"description\",\n          label: \"Description\",\n          type: \"rich-text\"\n        },\n        {\n          name: \"image\",\n          label: \"Image\",\n          type: \"image\"\n        }\n      ]\n    }\n  ]\n}, F = {\n  name: \"hero\",\n  label: \"Hero\",\n  fields: [\n    {\n      name: \"title\",\n      label: \"Title\",\n      description: \"By default this is the site title\",\n      type: \"string\"\n    },\n    {\n      name: \"subtitle\",\n      label: \"Subtitle\",\n      description: \"By default this is the site tagline\",\n      type: \"string\"\n    },\n    {\n      label: \"Document Link\",\n      name: \"document\",\n      type: \"reference\",\n      collections: [\"doc\"]\n    },\n    {\n      name: \"documentLabel\",\n      label: \"Button Text\",\n      type: \"string\"\n    }\n  ]\n}, B = [\n  \"for\",\n  \"and\",\n  \"nor\",\n  \"but\",\n  \"or\",\n  \"yet\",\n  \"so\"\n], j = [\n  \"a\",\n  \"an\",\n  \"the\"\n], R = [\n  \"aboard\",\n  \"about\",\n  \"above\",\n  \"across\",\n  \"after\",\n  \"against\",\n  \"along\",\n  \"amid\",\n  \"among\",\n  \"anti\",\n  \"around\",\n  \"as\",\n  \"at\",\n  \"before\",\n  \"behind\",\n  \"below\",\n  \"beneath\",\n  \"beside\",\n  \"besides\",\n  \"between\",\n  \"beyond\",\n  \"but\",\n  \"by\",\n  \"concerning\",\n  \"considering\",\n  \"despite\",\n  \"down\",\n  \"during\",\n  \"except\",\n  \"excepting\",\n  \"excluding\",\n  \"following\",\n  \"for\",\n  \"from\",\n  \"in\",\n  \"inside\",\n  \"into\",\n  \"like\",\n  \"minus\",\n  \"near\",\n  \"of\",\n  \"off\",\n  \"on\",\n  \"onto\",\n  \"opposite\",\n  \"over\",\n  \"past\",\n  \"per\",\n  \"plus\",\n  \"regarding\",\n  \"round\",\n  \"save\",\n  \"since\",\n  \"than\",\n  \"through\",\n  \"to\",\n  \"toward\",\n  \"towards\",\n  \"under\",\n  \"underneath\",\n  \"unlike\",\n  \"until\",\n  \"up\",\n  \"upon\",\n  \"versus\",\n  \"via\",\n  \"with\",\n  \"within\",\n  \"without\"\n];\nvar q = /* @__PURE__ */ new Set([\n  ...B,\n  ...j,\n  ...R\n]);\nconst M = [\n  \"ZEIT\",\n  \"ZEIT Inc.\",\n  \"Vercel\",\n  \"Vercel Inc.\",\n  \"CLI\",\n  \"API\",\n  \"HTTP\",\n  \"HTTPS\",\n  \"JSX\",\n  \"DNS\",\n  \"URL\",\n  \"now.sh\",\n  \"now.json\",\n  \"vercel.app\",\n  \"vercel.json\",\n  \"CI\",\n  \"CD\",\n  \"CDN\",\n  \"package.json\",\n  \"package.lock\",\n  \"yarn.lock\",\n  \"GitHub\",\n  \"GitLab\",\n  \"CSS\",\n  \"Sass\",\n  \"JS\",\n  \"JavaScript\",\n  \"TypeScript\",\n  \"HTML\",\n  \"WordPress\",\n  \"Next.js\",\n  \"Node.js\",\n  \"Webpack\",\n  \"Docker\",\n  \"Bash\",\n  \"Kubernetes\",\n  \"SWR\",\n  \"TinaCMS\",\n  \"UI\",\n  \"UX\",\n  \"TS\",\n  \"TSX\",\n  \"iPhone\",\n  \"iPad\",\n  \"watchOS\",\n  \"iOS\",\n  \"iPadOS\",\n  \"macOS\",\n  \"PHP\",\n  \"composer.json\",\n  \"composer.lock\",\n  \"CMS\",\n  \"SQL\",\n  \"C\",\n  \"C#\",\n  \"GraphQL\",\n  \"GraphiQL\",\n  \"JWT\",\n  \"JWTs\"\n];\nvar _ = M;\nconst A = q, H = _, o = `[^\\\\s'\\u2019\\\\(\\\\)!?;:\"-]`, U = new RegExp(`(?:(?:(\\\\s?(?:^|[.\\\\(\\\\)!?;:\"-])\\\\s*)(${o}))|(${o}))(${o}*[\\u2019']*${o}*)`, \"g\"), $ = (e) => e.map((l) => [new RegExp(`\\\\b${l}\\\\b`, \"gi\"), l]);\nfunction O(e) {\n  const l = e[0];\n  return /\\s/.test(l) ? e.slice(1) : /[\\(\\)]/.test(l) ? null : e;\n}\nvar x = (e, l = {}) => {\n  e = e.toLowerCase().replace(U, (r, m = \"\", h, T, v, w, I) => {\n    const D = r.length + w >= I.length, L = O(r);\n    if (!L)\n      return r;\n    if (!h) {\n      const S = T + v;\n      if (A.has(S) && !D)\n        return L;\n    }\n    return m + (T || h).toUpperCase() + v;\n  });\n  const t = l.special || [], n = [...H, ...t];\n  return $(n).forEach(([r, m]) => {\n    e = e.replace(r, m);\n  }), e;\n};\nconst W = (e) => e.toString().toLowerCase().trim().replace(/[^\\w\\s-]/g, \"\").replace(/[\\s_-]+/g, \"_\").replace(/^-+|-+$/g, \"\"), k = (e) => {\n  let l = new Intl.DateTimeFormat(\"en\", {\n    year: \"numeric\"\n  }).format(e), t = new Intl.DateTimeFormat(\"en\", {\n    month: \"2-digit\"\n  }).format(e), n = new Intl.DateTimeFormat(\"en\", {\n    day: \"2-digit\"\n  }).format(e);\n  return `${l}-${t}-${n}`;\n}, G = (e) => {\n  const l = e.split(\"/\").slice(1).join(\" \\u2013 \").replace(/-/g, \" \").replace(/\\.[^/.]+$/, \"\");\n  return x(l);\n}, J = {\n  name: \"Admonition\",\n  ui: {\n    defaultItem: {\n      type: \"note\",\n      title: \"Note\"\n    },\n    itemProps: (e) => ({ label: e == null ? void 0 : e.title })\n  },\n  fields: [\n    {\n      name: \"type\",\n      label: \"Type\",\n      type: \"string\",\n      options: [\n        {\n          label: \"Note\",\n          value: \"note\"\n        },\n        {\n          label: \"Tip\",\n          value: \"tip\"\n        },\n        {\n          label: \"Info\",\n          value: \"info\"\n        },\n        {\n          label: \"Caution\",\n          value: \"caution\"\n        },\n        {\n          label: \"Danger\",\n          value: \"danger\"\n        }\n      ]\n    },\n    {\n      name: \"title\",\n      label: \"Title\",\n      type: \"string\",\n      isTitle: !0,\n      required: !0\n    },\n    {\n      name: \"children\",\n      label: \"Content\",\n      type: \"rich-text\"\n    }\n  ]\n}, X = {\n  name: \"Details\",\n  fields: [\n    {\n      name: \"summary\",\n      label: \"Summary\",\n      type: \"string\",\n      isTitle: !0,\n      required: !0\n    },\n    {\n      name: \"children\",\n      label: \"Details\",\n      type: \"rich-text\"\n    }\n  ]\n}, z = {\n  name: \"CodeBlock\",\n  label: \"Code Block\",\n  fields: [\n    {\n      name: \"title\",\n      label: \"Filename\",\n      type: \"string\"\n    },\n    {\n      name: \"language\",\n      label: \"Language\",\n      type: \"string\"\n    },\n    {\n      name: \"children\",\n      label: \"Code\",\n      type: \"rich-text\",\n      required: !0\n    }\n  ]\n}, Q = {\n  name: \"Tabs\",\n  fields: [\n    {\n      name: \"children\",\n      label: \"Tabs\",\n      type: \"rich-text\",\n      templates: [\n        {\n          name: \"TabItem\",\n          label: \"Tab\",\n          ui: {\n            defaultItem: {\n              label: \"Tab\",\n              value: \"tab\"\n            }\n          },\n          fields: [\n            {\n              name: \"label\",\n              label: \"Label\",\n              type: \"string\",\n              isTitle: !0,\n              required: !0\n            },\n            {\n              name: \"value\",\n              type: \"string\",\n              ui: {\n                component: ({ input: e, tinaForm: l }) => (a.useEffect(() => {\n                  e.onChange(W(l.values.label));\n                }, [JSON.stringify(l.values)]), /* @__PURE__ */ a.createElement(\n                  \"input\",\n                  {\n                    type: \"text\",\n                    id: e.name,\n                    className: \"hidden\",\n                    ...e\n                  }\n                ))\n              }\n            },\n            {\n              name: \"children\",\n              label: \"Content\",\n              type: \"string\",\n              ui: {\n                component: \"textarea\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}, V = {\n  name: \"DocCardList\",\n  label: \"Doc Card List\",\n  fields: [\n    {\n      name: \"title\",\n      label: \"Title\",\n      type: \"string\"\n    }\n  ]\n}, y = [\n  J,\n  X,\n  z,\n  Q,\n  V\n], K = process.env.NEXT_PUBLIC_TINA_BRANCH || process.env.NEXT_PUBLIC_VERCEL_GIT_COMMIT_REF || process.env.HEAD || \"master\", Z = (e) => /* @__PURE__ */ a.createElement(\n  \"svg\",\n  {\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    \"stroke-width\": \"0\",\n    viewBox: \"0 0 24 24\",\n    height: \"1em\",\n    width: \"1em\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ...e\n  },\n  /* @__PURE__ */ a.createElement(\"path\", { d: \"M11.001 10h2v5h-2zM11 16h2v2h-2z\" }),\n  /* @__PURE__ */ a.createElement(\"path\", { d: \"M13.768 4.2C13.42 3.545 12.742 3.138 12 3.138s-1.42.407-1.768 1.063L2.894 18.064a1.986 1.986 0 0 0 .054 1.968A1.984 1.984 0 0 0 4.661 21h14.678c.708 0 1.349-.362 1.714-.968a1.989 1.989 0 0 0 .054-1.968L13.768 4.2zM4.661 19 12 5.137 19.344 19H4.661z\" })\n), f = () => /* @__PURE__ */ a.createElement(\"p\", { className: \"rounded-lg border shadow px-4 py-2.5 bg-gradient-to-r from-yellow-50 to-yellow-100 border-yellow-200 mb-4\" }, /* @__PURE__ */ a.createElement(\"div\", { className: \"flex items-center gap-2\" }, /* @__PURE__ */ a.createElement(Z, { className: \"w-6 h-auto flex-shrink-0 text-yellow-400\" }), /* @__PURE__ */ a.createElement(\"div\", { className: \"flex-1 text-sm text-yellow-700 whitespace-normal\t\" }, \"To see settings changes reflected on your site, restart the Tina CLI after saving \", /* @__PURE__ */ a.createElement(\"em\", null, \"(local development only)\"), \".\"))), Y = {\n  name: \"post\",\n  label: \"Posts\",\n  path: \"blog\",\n  format: \"mdx\",\n  ui: {\n    defaultItem: {\n      date: k(new Date())\n    }\n  },\n  fields: [\n    {\n      type: \"string\",\n      name: \"title\",\n      label: \"Title\",\n      isTitle: !0,\n      required: !0\n    },\n    {\n      name: \"authors\",\n      label: \"Authors\",\n      type: \"object\",\n      list: !0,\n      ui: {\n        itemProps: (e) => ({ label: e == null ? void 0 : e.name })\n      },\n      fields: [\n        {\n          name: \"name\",\n          label: \"Name\",\n          type: \"string\",\n          isTitle: !0,\n          required: !0\n        },\n        {\n          name: \"title\",\n          label: \"Title\",\n          type: \"string\"\n        },\n        {\n          name: \"url\",\n          label: \"URL\",\n          type: \"string\"\n        },\n        {\n          name: \"image_url\",\n          label: \"Image URL\",\n          type: \"string\"\n        }\n      ]\n    },\n    {\n      name: \"date\",\n      label: \"Date\",\n      type: \"string\",\n      required: !0,\n      ui: {\n        dateFormat: \"MMM D, yyyy\",\n        component: \"date\",\n        parse: (e) => {\n          k(e);\n        }\n      }\n    },\n    {\n      label: \"Tags\",\n      name: \"tags\",\n      type: \"string\",\n      list: !0,\n      ui: {\n        component: \"tags\"\n      }\n    },\n    {\n      type: \"rich-text\",\n      name: \"body\",\n      label: \"Body\",\n      isBody: !0,\n      templates: [...y]\n    }\n  ]\n}, ee = {\n  name: \"doc\",\n  label: \"Docs\",\n  path: \"docs\",\n  format: \"mdx\",\n  fields: [\n    {\n      type: \"string\",\n      name: \"title\",\n      label: \"Title\",\n      isTitle: !0,\n      required: !0\n    },\n    {\n      type: \"string\",\n      name: \"description\",\n      label: \"Description\"\n    },\n    {\n      label: \"Tags\",\n      name: \"tags\",\n      type: \"string\",\n      list: !0,\n      ui: {\n        component: \"tags\"\n      }\n    },\n    {\n      type: \"rich-text\",\n      name: \"body\",\n      label: \"Body\",\n      isBody: !0,\n      templates: [...y]\n    }\n  ]\n}, s = {\n  name: \"doc\",\n  label: \"Doc Link\",\n  ui: {\n    itemProps: (e) => ({\n      label: e != null && e.label ? e == null ? void 0 : e.label : e != null && e.document ? G(e == null ? void 0 : e.document) : e.name\n    })\n  },\n  fields: [\n    {\n      label: \"Document\",\n      name: \"document\",\n      type: \"reference\",\n      collections: [\"doc\"],\n      isTitle: !0,\n      required: !0\n    },\n    {\n      name: \"label\",\n      label: \"Label\",\n      description: \"By default this is the document title\",\n      type: \"string\"\n    }\n  ]\n}, c = {\n  name: \"link\",\n  label: \"External Link\",\n  ui: {\n    itemProps: (e) => ({\n      label: e != null && e.title ? e == null ? void 0 : e.title : e.name\n    })\n  },\n  fields: [\n    {\n      name: \"title\",\n      label: \"Label\",\n      type: \"string\",\n      isTitle: !0,\n      required: !0\n    },\n    {\n      name: \"href\",\n      label: \"URL\",\n      type: \"string\",\n      required: !0\n    }\n  ]\n}, p = [\n  {\n    name: \"title\",\n    label: \"Title\",\n    type: \"string\",\n    isTitle: !0,\n    required: !0\n  },\n  {\n    name: \"link\",\n    label: \"Link\",\n    type: \"string\",\n    options: [\n      {\n        label: \"None\",\n        value: \"none\"\n      },\n      {\n        label: \"Document\",\n        value: \"doc\"\n      },\n      {\n        label: \"Generated Index\",\n        value: \"generated\"\n      }\n    ]\n  },\n  {\n    name: \"docLink\",\n    label: \"Document\",\n    type: \"reference\",\n    collections: [\"doc\"],\n    ui: {\n      component: (e) => a.useMemo(() => {\n        let t = e.field.name;\n        return t = t.substring(0, t.lastIndexOf(\".\")) || t, t.split(\".\").reduce((n, i) => n[i], e.tinaForm.values).link;\n      }, [e.tinaForm.values]) !== \"doc\" ? null : g(e)\n    }\n  }\n], u = {\n  name: \"items\",\n  label: \"Items\",\n  type: \"object\",\n  list: !0\n}, b = {\n  name: \"category\",\n  label: \"Category\",\n  ui: {\n    itemProps: (e) => ({\n      label: e != null && e.title ? e == null ? void 0 : e.title : e.name\n    }),\n    defaultItem: {\n      link: \"none\"\n    }\n  }\n}, te = {\n  ...b,\n  fields: [\n    ...p,\n    {\n      ...u,\n      templates: [\n        {\n          ...b,\n          fields: [\n            ...p,\n            {\n              ...u,\n              templates: [\n                {\n                  ...b,\n                  fields: [\n                    ...p,\n                    {\n                      ...u,\n                      templates: [s, c]\n                    }\n                  ]\n                },\n                s,\n                c\n              ]\n            }\n          ]\n        },\n        s,\n        c\n      ]\n    }\n  ]\n}, le = {\n  ...u,\n  templates: [te, s, c]\n}, ae = {\n  name: \"sidebar\",\n  label: \"Docs Sidebar\",\n  path: \"config/sidebar\",\n  format: \"json\",\n  ui: {\n    global: !0,\n    allowedActions: {\n      create: !1,\n      delete: !1\n    }\n  },\n  fields: [\n    {\n      type: \"string\",\n      name: \"_warning\",\n      ui: {\n        component: () => /* @__PURE__ */ a.createElement(f, null)\n      }\n    },\n    {\n      type: \"string\",\n      label: \"Label\",\n      name: \"label\",\n      required: !0,\n      isTitle: !0,\n      ui: {\n        component: \"hidden\"\n      }\n    },\n    le\n  ]\n}, d = [\n  {\n    name: \"label\",\n    label: \"Label\",\n    type: \"string\",\n    isTitle: !0,\n    required: !0\n  },\n  {\n    name: \"link\",\n    label: \"Link\",\n    type: \"string\",\n    options: [\n      {\n        label: \"None\",\n        value: \"none\"\n      },\n      {\n        label: \"Document\",\n        value: \"doc\"\n      },\n      {\n        label: \"Page\",\n        value: \"page\"\n      },\n      {\n        label: \"Blog\",\n        value: \"blog\"\n      },\n      {\n        label: \"External\",\n        value: \"external\"\n      }\n    ]\n  },\n  {\n    name: \"docLink\",\n    label: \"Document\",\n    type: \"reference\",\n    collections: [\"doc\"],\n    ui: {\n      component: (e) => a.useMemo(() => {\n        let t = e.field.name;\n        return t = t.substring(0, t.lastIndexOf(\".\")) || t, t.split(\".\").reduce((n, i) => n[i], e.tinaForm.values).link;\n      }, [e.tinaForm.values]) !== \"doc\" ? null : g(e)\n    }\n  },\n  {\n    name: \"pageLink\",\n    label: \"Page\",\n    type: \"reference\",\n    collections: [\"pages\"],\n    ui: {\n      component: (e) => a.useMemo(() => {\n        let t = e.field.name;\n        return t = t.substring(0, t.lastIndexOf(\".\")) || t, t.split(\".\").reduce((n, i) => n[i], e.tinaForm.values).link;\n      }, [e.tinaForm.values]) !== \"page\" ? null : g(e)\n    }\n  },\n  {\n    name: \"externalLink\",\n    label: \"URL\",\n    type: \"string\",\n    ui: {\n      component: (e) => a.useMemo(() => {\n        let t = e.field.name;\n        return t = t.substring(0, t.lastIndexOf(\".\")) || t, t.split(\".\").reduce((n, i) => n[i], e.tinaForm.values).link;\n      }, [e.tinaForm.values]) !== \"external\" ? null : P(e)\n    }\n  },\n  {\n    name: \"position\",\n    label: \"Position\",\n    type: \"string\",\n    required: !0,\n    options: [\n      {\n        label: \"Left\",\n        value: \"left\"\n      },\n      {\n        label: \"Right\",\n        value: \"right\"\n      }\n    ],\n    ui: {\n      component: \"button-toggle\"\n    }\n  }\n], C = {\n  name: \"items\",\n  label: \"Items\",\n  type: \"object\",\n  list: !0,\n  ui: {\n    itemProps: (e) => ({\n      label: e.label\n    })\n  }\n}, ne = {\n  label: \"Settings\",\n  name: \"settings\",\n  path: \"config/docusaurus\",\n  format: \"json\",\n  ui: {\n    global: !0,\n    allowedActions: {\n      create: !1,\n      delete: !1\n    }\n  },\n  fields: [\n    {\n      type: \"string\",\n      name: \"_warning\",\n      ui: {\n        component: () => /* @__PURE__ */ a.createElement(f, null)\n      }\n    },\n    {\n      type: \"string\",\n      label: \"Label\",\n      name: \"label\",\n      required: !0,\n      isTitle: !0,\n      ui: {\n        component: \"hidden\"\n      }\n    },\n    {\n      type: \"object\",\n      label: \"Logo\",\n      name: \"logo\",\n      fields: [\n        {\n          type: \"string\",\n          label: \"Alt Text\",\n          name: \"alt\"\n        },\n        {\n          type: \"image\",\n          label: \"Source\",\n          name: \"src\"\n        }\n      ]\n    },\n    {\n      type: \"string\",\n      label: \"Title\",\n      name: \"title\",\n      required: !0\n    },\n    {\n      type: \"string\",\n      label: \"Tagline\",\n      name: \"tagline\"\n    },\n    {\n      type: \"string\",\n      label: \"URL\",\n      name: \"url\",\n      required: !0\n    },\n    {\n      type: \"object\",\n      label: \"Navbar\",\n      name: \"navbar\",\n      list: !0,\n      ui: {\n        itemProps: (e) => ({\n          label: e.label + \" - \" + x(e.position)\n        }),\n        defaultItem: {\n          position: \"left\"\n        }\n      },\n      fields: [\n        ...d,\n        {\n          ...C,\n          fields: [\n            ...d,\n            {\n              ...C,\n              fields: d\n            }\n          ]\n        }\n      ]\n    },\n    {\n      type: \"object\",\n      label: \"Footer\",\n      name: \"footer\",\n      fields: [\n        {\n          name: \"style\",\n          label: \"Style\",\n          type: \"string\",\n          options: [\n            {\n              label: \"Dark\",\n              value: \"dark\"\n            },\n            {\n              label: \"Light\",\n              value: \"light\"\n            }\n          ],\n          ui: {\n            component: \"button-toggle\"\n          }\n        },\n        {\n          type: \"object\",\n          label: \"Categories\",\n          name: \"links\",\n          list: !0,\n          ui: {\n            itemProps: (e) => ({\n              label: e.title\n            })\n          },\n          fields: [\n            {\n              type: \"string\",\n              label: \"Title\",\n              name: \"title\"\n            },\n            {\n              type: \"object\",\n              label: \"Links\",\n              name: \"items\",\n              list: !0,\n              templates: [\n                {\n                  name: \"internal\",\n                  label: \"Internal\",\n                  ui: {\n                    itemProps: (e) => ({\n                      label: e.label\n                    })\n                  },\n                  fields: [\n                    {\n                      type: \"string\",\n                      label: \"Label\",\n                      name: \"label\"\n                    },\n                    {\n                      type: \"reference\",\n                      label: \"Page\",\n                      name: \"to\",\n                      collections: [\"doc\", \"pages\", \"post\"]\n                    }\n                  ]\n                },\n                {\n                  name: \"blog\",\n                  label: \"Blog\",\n                  ui: {\n                    defaultItem: {\n                      label: \"Blog\"\n                    },\n                    itemProps: (e) => ({\n                      label: e.label\n                    })\n                  },\n                  fields: [\n                    {\n                      type: \"string\",\n                      label: \"Label\",\n                      name: \"label\"\n                    }\n                  ]\n                },\n                {\n                  name: \"external\",\n                  label: \"External\",\n                  ui: {\n                    itemProps: (e) => ({\n                      label: e.label\n                    })\n                  },\n                  fields: [\n                    {\n                      type: \"string\",\n                      label: \"Label\",\n                      name: \"label\"\n                    },\n                    {\n                      type: \"string\",\n                      label: \"URL\",\n                      name: \"href\"\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          type: \"string\",\n          label: \"Copyright\",\n          name: \"copyright\"\n        }\n      ]\n    }\n  ]\n}, ie = {\n  name: \"homepage\",\n  label: \"Homepage\",\n  description: \"To see settings changes reflected on your site, you must restart the Tina CLI after saving changes (local development only).\",\n  path: \"config/homepage\",\n  format: \"json\",\n  ui: {\n    allowedActions: {\n      create: !1,\n      delete: !1\n    }\n  },\n  fields: [\n    {\n      type: \"string\",\n      name: \"_warning\",\n      ui: {\n        component: () => /* @__PURE__ */ a.createElement(f, null)\n      }\n    },\n    {\n      type: \"string\",\n      label: \"Label\",\n      name: \"label\",\n      required: !0,\n      isTitle: !0,\n      ui: {\n        component: \"hidden\"\n      }\n    },\n    {\n      type: \"string\",\n      name: \"title\",\n      label: \"Title\"\n    },\n    {\n      type: \"string\",\n      name: \"description\",\n      label: \"Description\"\n    },\n    {\n      type: \"object\",\n      list: !0,\n      name: \"blocks\",\n      label: \"Blocks\",\n      templates: [F, N]\n    }\n  ]\n}, re = {\n  name: \"pages\",\n  label: \"Pages\",\n  path: \"src/pages\",\n  format: \"mdx\",\n  fields: [\n    {\n      type: \"string\",\n      name: \"title\",\n      label: \"Title\",\n      isTitle: !0,\n      required: !0\n    },\n    {\n      type: \"string\",\n      name: \"description\",\n      label: \"Description\"\n    },\n    {\n      type: \"rich-text\",\n      name: \"body\",\n      label: \"Body\",\n      isBody: !0,\n      templates: [...y]\n    }\n  ]\n}, ce = E({\n  branch: K,\n  clientId: process.env.CLIENT_ID,\n  token: process.env.TOKEN,\n  build: {\n    outputFolder: \"admin\",\n    publicFolder: \"static\"\n  },\n  media: {\n    tina: {\n      mediaRoot: \"img\",\n      publicFolder: \"static\"\n    }\n  },\n  schema: {\n    collections: [\n      ee,\n      Y,\n      ie,\n      re,\n      ae,\n      ne\n    ]\n  }\n});\nexport {\n  ce as default\n};\n","import React, { Suspense } from 'react'\nimport TinaCMS, { TinaAdmin, useCMS, MdxFieldPluginExtendible } from 'tinacms'\nimport { TinaEditProvider, useEditState } from 'tinacms/dist/edit-state'\nimport { Preview } from './preview'\n\n// TODO: Resolve this to local file in tsconfig.json\n// @ts-expect-error\nimport config from 'TINA_IMPORT'\n// @ts-expect-error\nimport schemaJson from 'SCHEMA_IMPORT'\n\nconst RawEditor = React.lazy(() => import('./fields/rich-text'))\n\nconst Editor = (props) => {\n  const [rawMode, setRawMode] = React.useState(false)\n  return (\n    <MdxFieldPluginExtendible.Component\n      rawMode={rawMode}\n      setRawMode={setRawMode}\n      {...props}\n      rawEditor={\n        <Suspense fallback={<div>Loading raw editor...</div>}>\n          <RawEditor {...props} setRawMode={setRawMode} rawMode={rawMode} />\n        </Suspense>\n      }\n    />\n  )\n}\n\nconst SetPreview = ({ outputFolder }: { outputFolder: string }) => {\n  const cms = useCMS()\n  cms.flags.set('tina-preview', outputFolder)\n  // Override original 'rich-text' field with one that has raw mode support\n  cms.fields.add({\n    ...MdxFieldPluginExtendible,\n    Component: Editor,\n  })\n  return null\n}\n\nexport const TinaAdminWrapper = () => {\n  const schema = { ...config?.schema, config }\n  return (\n    // @ts-ignore JSX element type 'TinaCMS' does not have any construct or call signatures.ts(2604)\n    <TinaCMS {...config} schema={schema} client={{ apiUrl: __API_URL__ }}>\n      <SetPreview outputFolder={config.build.outputFolder} />\n      <TinaAdmin preview={Preview} config={config} schemaJson={schemaJson} />\n    </TinaCMS>\n  )\n}\n\nconst GoToEdit = () => {\n  const { setEdit } = useEditState()\n  setEdit(true)\n  return <div>Going into edit mode</div>\n}\n\nfunction App() {\n  return (\n    <TinaEditProvider editMode={<TinaAdminWrapper />}>\n      <GoToEdit />\n    </TinaEditProvider>\n  )\n}\nexport default App\n","/**\n\n*/\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"file":"assets/index.70fd1bc1.js"}